/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java application project to get you started.
 * For more details on building Java & JVM projects, please refer to https://docs.gradle.org/8.8/userguide/building_java_projects.html in the Gradle documentation.
 */

plugins {
    // Apply the application plugin to add support for building a CLI application in Java.
    application
}

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
}

dependencies {
    // Use JUnit Jupiter for testing.
    testImplementation(libs.junit.jupiter)

    testRuntimeOnly("org.junit.platform:junit-platform-launcher")

    // This dependency is used by the application.
    implementation(libs.guava)

    implementation("com.fasterxml.jackson.core:jackson-databind:2.16.1")
}

// Apply a specific Java toolchain to ease working on different environments.
java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
}

application {
    // Define the main class for the application.
    mainClass = "org.boardgames.crossway.App"
}

tasks.named<Test>("test") {
    // Use JUnit Platform for unit tests.
    useJUnitPlatform()
    // Allow printing to the console during tests.
    testLogging {
        events("standard_error")
    }
}

tasks.named<Zip>("distZip") {
    archiveFileName.set("CrossWay-1.1.0-BETA.zip")
}

tasks.withType<JavaCompile>().configureEach {
    options.compilerArgs.addAll(listOf(
        "-Xlint:deprecation",
        "-Xlint:unchecked"
        // "-Xlint:all"        // enable all checks
        // "-Xlint:-serial"    // example: disable just 'serial' if noisy
        // "-Werror"           // uncomment to treat warnings as errors
    ))
    // Also prints a summary count of deprecation warnings
    options.isDeprecation = true
}

